version: '3.8'

services:
  web:
    build:
      context: ./web
    volumes:
      - ./web:/home/src/web
      - static_volume:/home/src/web/static
    command:
      gunicorn web.wsgi:application --bind 0.0.0.0:8000 
    ports:
      - "8000:8000"
    restart: "on-failure"
    expose:
      - 8000
    env_file:
      - ./.env
    privileged: true
    depends_on:
      - db
      - redis
  nginx:
    build:
      context: ./nginx
    volumes:
      - static_volume:/home/src/web/static
    ports:
      - 1337:80
    depends_on:
      - web
    restart: "on-failure"
  redis:
    build: ./redis
    command: redis-server
    expose:
      - 6379
    ports:
      - 6379
    restart: 'on-failure'
  celery:
    build: ./web
    command: celery --app=web worker --loglevel=INFO -E
    restart: always
    environment:
      - CELERY_BROKER_URL = "redis://redis:6379/0"
      - CELERY_RESULT_BACKEND = "redis://redis:6379/0"
    volumes:
      - ./web:/home/src/web
    privileged: true
    depends_on:
      - db
      - redis
      - web
  db:
    build: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - ./.env
volumes:
  static_volume: {}
  postgres_data: {}
